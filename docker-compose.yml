version: '3.8'

services:
  # PostgreSQL数据库服务
  postgres:
    image: ankane/pgvector:latest
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-weknowledge}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_NAME=${DB_NAME:-weknowledge}
      - SECRET_KEY=${SECRET_KEY:-your_secret_key_here}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
    volumes:
      - ./backend:/app
      - backend_media:/app/media
    ports:
      - "8000:8000"
    command: >
      bash -c "alembic upgrade head && 
      python -c 'from app.db.init_db import init_db; from app.db.session import SessionLocal; db = SessionLocal(); init_db(db)' &&
      uvicorn app.main:app --host 0.0.0.0 --port 8000"

  # 前端Web服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - backend
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    command: npm run dev

volumes:
  postgres_data:
  backend_media: 